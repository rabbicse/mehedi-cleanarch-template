{
    "$schema": "http://json.schemastore.org/template",
    "author": "Md Mehedi Hasan",
    "classifications": [
        "API",
        "Clean Architecture",
        "Domain Driven Design",
        "Event Driven Architecture",
        "CQRS",
        ".NET Core",
        "Linux"
    ],
    "identity": "Mehedi.CleanArchitecture.Template",
    "name": "ASP.NET Core Clean Architecture API",
    "shortName": "cleanarch",
    "sourceName": "Mehedi.CleanArchitecture",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "preferNameDirectory": true,
    "symbols": {
        "Database": {
            "type": "parameter",
            "datatype": "choice",
            "choices": [
                {
                    "choice": "postgresql",
                    "description": "PostgreSQL"
                },
                {
                    "choice": "sqlite",
                    "description": "SQLite"
                },
                {
                    "choice": "sqlserver",
                    "description": "SQL Server"
                }
            ],
            "defaultValue": "sqlserver",
            "description": "The database type to use."
        },
        "UsePostgreSQL": {
            "type": "computed",
            "value": "(Database == \"postgresql\")"
        },
        "UseSqlite": {
            "type": "computed",
            "value": "(Database == \"sqlite\")"
        },
        "UseSqlServer": {
            "type": "computed",
            "value": "(Database == \"sqlserver\")"
        },
        "EnableEventSourcing": {
            "type": "parameter",
            "datatype": "bool",
            "allowMultipleValues": false,
            "choices": [
                {
                    "choice": true,
                    "description": "✔ Enable Event Sourcing"
                },
                {
                    "choice": false,
                    "description": "❌ Disable Event Sourcing"
                }
            ],
            "defaultValue": false,
            "description": "Enable or disable event sourcing."
        },
        "UseEventSourcing": {
            "type": "computed",
            "value": "(EnableEventSourcing == true)"
        },
        "EnableCaching": {
            "type": "parameter",
            "datatype": "bool",
            "allowMultipleValues": false,
            "choices": [
                {
                    "choice": true,
                    "description": "✔ Enable Caching"
                },
                {
                    "choice": false,
                    "description": "❌ Disable Caching"
                }
            ],
            "defaultValue": false,
            "description": "Enable or Disable Caching."
        },
        "UseCaching": {
            "type": "computed",
            "value": "(EnableCaching == true)"
        }
    },
    "sources": [
        {
            "source": "./",
            "target": "./",
            "exclude": [
                ".git/**/*",
                ".template.config/**/*",
                ".vs/**/*",
                "*.nuspec",
                "bin/**/*",
                "obj/**/*",
                "src/Infrastructure/Mehedi.CleanArchitecture.RedisCache.Infrastructure/**",
                "src/Infrastructure/Mehedi.CleanArchitecture.Read.Mongo.Infrastructure/**",
                "src/Infrastructure/Mehedi.CleanArchitecture.EventStore.EventStoreDB.Infrastructure/**",
                "src/Infrastructure/Data/PostgreSQL/**",
                "src/Presentation/Mehedi.CleanArchitecture.Api/appsettings.Development.Postgres.json",
                "src/Presentation/Mehedi.CleanArchitecture.Api/appsettings.Development.Redis.json",
                ".github/**/*"
            ],
            "modifiers": [
                {
                    "include": [
                        ".editorconfig",
                        "README.md",
                        ".gitignore",
                        "Directory.Build.props",
                        "Directory.Packages.props",
                        "**/*.sln"
                    ]
                },
                {
                    "condition": "(UseCaching)",
                    "include": [
                        "src/Infrastructure/Mehedi.CleanArchitecture.RedisCache.Infrastructure/**",
                        "src/Presentation/Mehedi.CleanArchitecture.Api/appsettings.Development.Redis.json"
                    ]
                }
            ],
            "primaryOutputs": [
                {
                    "path": "Mehedi.CleanArchitecture.sln"
                }
            ]
        }
    ]
}